name: PDF Monitor
on:
  schedule:
    - cron: '0 */6 * * *'  # Check every 6 hours
  workflow_dispatch:  # Allows manual runs

jobs:
  check-pdf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Download and check PDF
        run: |
          # URL of the PDF to monitor
          PDF_URL="https://storage.googleapis.com/support-kms-prod/qn1xhBu8MVcZPIZ2WZMNdI40FtZXFPGYxj2K"
          
          # Download current PDF
          curl -s "$PDF_URL" -o current.pdf
          
          # Calculate hash of current file
          CURRENT_HASH=$(sha256sum current.pdf | cut -d' ' -f1)
          echo "Current hash: $CURRENT_HASH"
          
          # Check if we have a previous hash stored
          if [ -f previous_hash.txt ]; then
            PREVIOUS_HASH=$(cat previous_hash.txt)
            echo "Previous hash: $PREVIOUS_HASH"
            
            if [ "$CURRENT_HASH" != "$PREVIOUS_HASH" ]; then
              echo "🚨 PDF HAS BEEN UPDATED! 🚨"
              echo "The PDF file has changed since last check."
              echo "Previous hash: $PREVIOUS_HASH"
              echo "Current hash: $CURRENT_HASH"
              echo "Timestamp: $(date)"
              
              # Save the change info
              echo "PDF updated on $(date)" >> change_log.txt
              echo "Previous: $PREVIOUS_HASH" >> change_log.txt
              echo "Current: $CURRENT_HASH" >> change_log.txt
              echo "---" >> change_log.txt
              
              # Set flag for notification
              echo "CHANGE_DETECTED=true" >> $GITHUB_ENV
            else
              echo "✅ No changes detected"
            fi
          else
            echo "📝 First run - storing initial hash"
          fi
          
          # Store current hash for next time
          echo "$CURRENT_HASH" > previous_hash.txt
          
      - name: Commit changes if any
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update PDF monitoring data - $(date)"
            git push
          fi
          
      - name: Create Issue on Change (Optional)
        if: env.CHANGE_DETECTED == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🚨 PDF File Updated',
              body: `The monitored PDF file has been updated!
              
              **Detection Time:** ${new Date().toISOString()}
              **File URL:** https://storage.googleapis.com/support-kms-prod/qn1xhBu8MVcZPIZ2WZMNdI40FtZXFPGYxj2K
              
              Check the [Actions tab](https://github.com/${context.repo.owner}/${context.repo.repo}/actions) for more details.`
            })
